// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MenuType {
  MAIN
  FOOTER
}

model MenuItem {
  id String @id @default(cuid())
  type MenuType @default(MAIN)
  label String @db.VarChar(255)
  description String? @db.VarChar(500)
  url String
  display_order Int
  is_active Boolean @default(true)
  parentId String? 
  parent MenuItem? @relation("MenuSubMenus", fields: [parentId], references: [id])
  children MenuItem[] @relation("MenuSubMenus")

}

model TimePeriod {
  TimePeriod_NId Int @id @default(autoincrement())
  TimePeriod String @unique
  Data Data[]
}

model Unit {
  Unit_NId Int @id @default(autoincrement())
  Unit_Name String @unique
  Unit_GId String @default(uuid())
  Unit_Global Boolean @default(false)
  IUS IUS[]
}

model SubGroupType {
  Subgroup_Type_NId Int @id @default(autoincrement())
  Subgroup_Type_Name String @unique
  Subgroup_Type_GId String @default(uuid())
  Subgroup_Type_Order Int @unique @default(autoincrement())
  Subgroup_Type_Global Boolean @default(false)
  children SubGroup[]
}

model SubGroup {
  Subgroup_NId Int @id @default(autoincrement())
  Subgroup_Name String
  Subgroup_GId String @unique @default(uuid())
  Subgroup_Global Boolean @default(false)
  Type SubGroupType? @relation(fields: [Subgroup_Type], references: [Subgroup_Type_NId])
  Subgroup_Type Int?
  SubgroupSubGroupVals SubGroupValSubgroups[]
}


model SubgroupVal {
  Subgroup_Val_NId Int @id @default(autoincrement())
  Subgroup_Val String @unique
  Subgroup_Val_GId String @unique @default(uuid())
  Subgroup_Val_Global Boolean @default(false)
  SubgroupSubGroupVals SubGroupValSubgroups[]
  IUS IUS[]
}

model SubGroupValSubgroups {
  id Int @id @default(autoincrement())
  SubgroupVal SubgroupVal @relation(fields: [Subgroup_Val_NId], references: [Subgroup_Val_NId])
  Subgroup SubGroup @relation(fields: [Subgroup_NId], references: [Subgroup_NId])
  Subgroup_Val_NId Int
  Subgroup_NId Int

}

enum ICType {
  GL
  SC
  SR
}

model IndicatorClassification {
  IC_NId Int @id @default(autoincrement())
  IC_GId String @unique @default(uuid())
  IC_Name String
  IC_Global Boolean @default(false)
  IC_Info String?
  IC_Type ICType @default(GL)
  IC_Parent_NId Int? 
  children IndicatorClassification[] @relation("Classification")
  parent IndicatorClassification? @relation("Classification",references: [IC_NId], fields: [IC_Parent_NId])
  IUSIC IUSIndicatorClassification[]
}

model Indicator {
  Indicator_NId Int @id @default(autoincrement())
  Indictor_Name String 
  Indicator_GId String @unique @default(uuid())
  Indicator_Info String
  Indicator_Global Boolean
  IUS IUS[]
}

model IUS {
  IUSNId Int @id @default(autoincrement())
  Indicator Indicator @relation(references: [Indicator_NId], fields: [Indicator_NId])
  Indicator_NId Int
  Unit Unit @relation(references: [Unit_NId], fields: [Unit_NId])
  Unit_NId Int
  SubgroupVal SubgroupVal? @relation(references: [Subgroup_Val_NId], fields: [Subgroup_Val_NId])
  Subgroup_Val_NId Int
  Min_Value Int?
  Max_Value Int?
  IUSIC IUSIndicatorClassification[]
  Data Data[]
}

model IUSIndicatorClassification {
  IC_IUSNId Int @id @default(autoincrement())
  indicatorClassification IndicatorClassification @relation(references: [IC_NId], fields: [IC_NId])
  IC_NId Int
  IUS IUS @relation(references: [IUSNId], fields: [IUSNId])
  IUSNId Int
  IC_IUS_Order Int?
  IC_IUS_Label String?
  RecommendedSource Boolean @default(false)
}

model AgePeriod {
  AgePeriod_NId Int @id @default(autoincrement())
  AgePeriod String @unique
}

model AreaLevel {
  Level_NId Int @id @default(autoincrement())
  Area_Level Int @unique
  Area_Level_Name String @unique
  Areas Area[]
}

model Area {
  Area_NId Int @id @default(autoincrement())
  Area_ID String @unique
  Area_Name String
  Area_GId String @unique @default(uuid())
  Area_Level Int
  AreaLevel AreaLevel @relation(references: [Area_Level], fields: [Area_Level])
  AreaMap String?
  AreaBlock String?
  Area_Global Boolean @default(false)
  Area_Parent_NId Int?
  ParentArea Area? @relation("ParentChildArea",references: [Area_NId], fields: [Area_Parent_NId])
  ChildArea Area[] @relation("ParentChildArea")
  Data Data[]
}

model Source {
  Source_NId Int @id @default(autoincrement())
  Source_GId String @unique @default(uuid())
  Source_Name String
  Data Data[]
}

model Data {
  Data_NId Int @id @default(autoincrement())
  IUS IUS @relation(references: [IUSNId], fields: [IUSNId])
  IUSNId Int
  TimePeriod TimePeriod @relation(references: [TimePeriod_NId], fields: [TimePeriod_NId])
  TimePeriod_NId Int
  Area Area @relation(references: [Area_NId], fields: [Area_NId])
  Area_NId Int
  Data_Value Decimal
  Start_Date DateTime?
  End_Date DateTime? 
  Date_Denominator Decimal?
  Source Source @relation(references: [Source_NId], fields: [Source_NId])
  Source_NId Int
}